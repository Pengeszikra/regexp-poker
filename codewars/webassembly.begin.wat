# https://maxgraey.github.io/Assembleash/#AssemblyScript

(module
 (type $ii (func (param i32) (result i32)))
 (memory $0 1)
 (export "fib" (func $fib))
 (export "memory" (memory $0))
 (func $fib (type $ii) (param $0 i32) (result i32)
  (if
   (i32.le_s
    (get_local $0)
    (i32.const 1)
   )
   (return
    (i32.const 1)
   )
  )
  (i32.add
   (call $fib
    (i32.sub
     (get_local $0)
     (i32.const 1)
    )
   )
   (call $fib
    (i32.sub
     (get_local $0)
     (i32.const 2)
    )
   )
  )
 )
)

// use in js
WebAssembly.instantiate(new Uint8Array([
    0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x06, 
    0x01, 0x60, 0x01, 0x7f, 0x01, 0x7f, 0x03, 0x02, 0x01, 0x00, 
    0x05, 0x03, 0x01, 0x00, 0x01, 0x07, 0x10, 0x02, 0x03, 0x66, 
    0x69, 0x62, 0x00, 0x00, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 
    0x79, 0x02, 0x00, 0x0a, 0x21, 0x01, 0x1f, 0x00, 0x02, 0x7f, 
    0x20, 0x00, 0x41, 0x01, 0x4c, 0x04, 0x40, 0x41, 0x01, 0x0f, 
    0x0b, 0x20, 0x00, 0x41, 0x01, 0x6b, 0x10, 0x00, 0x20, 0x00, 
    0x41, 0x02, 0x6b, 0x10, 0x00, 0x6a, 0x0b, 0x0b, 0x00, 0x0d, 
    0x04, 0x6e, 0x61, 0x6d, 0x65, 0x01, 0x06, 0x01, 0x00, 0x03, 
    0x66, 0x69, 0x62
])).then( wasm=> fib =wasm.instance.exports.fib )